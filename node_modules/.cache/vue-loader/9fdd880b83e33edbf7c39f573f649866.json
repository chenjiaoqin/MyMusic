{"remainingRequest":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\bilibili\\vuejs资料和代码\\my-music\\src\\components\\singer\\singer.vue?vue&type=style&index=0&id=099e9be2&lang=stylus&scoped=true&rel=stylesheet%2Fstylus&","dependencies":[{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\src\\components\\singer\\singer.vue","mtime":1601904258713},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zaW5nZXIKICBwb3NpdGlvbiBmaXhlZAogIHRvcCA4OHB4CiAgYm90dG9tIDAKICB3aWR0aCAxMDAlCg=="},{"version":3,"sources":["singer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA","file":"singer.vue","sourceRoot":"src/components/singer","sourcesContent":["<template>\r\n<div>\r\n  <list-view :data=\"singerList\"></list-view>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {getSingers} from 'api/singer.js'\r\nimport {ERR_OK} from 'api/config.js'\r\nimport ListView from 'base/listView/listView.vue'\r\nimport Singer from 'common/js/singer.js'\r\n\r\n\r\nexport default {\r\n  components: {\r\n    ListView,\r\n  },\r\n  props: {},\r\n  data() {\r\n    return {\r\n      singerList:[]\r\n    }\r\n  },\r\n  created(){\r\n    this._getSingers()\r\n    this._normalizeSinger()\r\n  },\r\n  methods:{\r\n    _getSingers(){\r\n      getSingers().then(res=>{\r\n        if(res.code===ERR_OK){\r\n          this.singerList=this._normalizeSinger(res.data.list)\r\n          console.log(this.singerList)\r\n        }\r\n      })\r\n    },\r\n    _normalizeSinger(list){\r\n      let map={\r\n        hot:{\r\n          title:'热门',\r\n          items:[]\r\n        }\r\n      }\r\n\r\n      if(list&&list.length){\r\n        list.forEach((item,index) => {\r\n        if(index<10){\r\n          map.hot.items.push(new Singer({\r\n            id:item.Fsinger_mid,\r\n            name:item.Fsinger_name\r\n          }))\r\n        }\r\n        const key=item.Findex\r\n        if(!map[key]){\r\n          map[key]={\r\n            title:key,\r\n            items:[]\r\n          }\r\n        }\r\n        map[key].items.push(new Singer({\r\n          id:item.Fsinger_mid,\r\n          name:item.Fsinger_name\r\n        }))              \r\n        });\r\n\r\n        let hot=[]\r\n        let ret=[]\r\n        for (let key in map){\r\n          let value=map[key]\r\n          if(value.title.match(/[a-zA-z]/)){\r\n            ret.push(value)\r\n          }else if (value.title==='热门'){\r\n            hot.push(value)\r\n          }\r\n        }\r\n        ret.sort((a,b)=>{\r\n          return a.title.charCodeAt(0)-b.title.charCodeAt(0)\r\n        })\r\n\r\n        return hot.concat(ret)\r\n\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped rel=\"stylesheet/stylus\" type=\"text/stylus\">\r\n  .singer\r\n    position fixed\r\n    top 88px\r\n    bottom 0\r\n    width 100%\r\n</style>"]}]}