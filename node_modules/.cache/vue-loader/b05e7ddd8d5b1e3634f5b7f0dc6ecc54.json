{"remainingRequest":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\bilibili\\vuejs资料和代码\\my-music\\src\\base\\scroll\\scroll.vue?vue&type=style&index=0&id=32f276ac&scoped=true&lang=css&","dependencies":[{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\src\\base\\scroll\\scroll.vue","mtime":1601974831943},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\bilibili\\vuejs资料和代码\\my-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndyYXBwZXJ7CiAgcG9zaXRpb246Zml4ZWQ7CiAgdG9wOjg4cHg7CiAgcmlnaHQ6IDA7CiAgYm90dG9tOiAwOwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93OiBoaWRkZW47Cgp9Cg=="},{"version":3,"sources":["scroll.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"scroll.vue","sourceRoot":"src/base/scroll","sourcesContent":["<template>\n  <div ref=\"wrapper\" class=\"wrapper\">\n    <slot></slot>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import BScroll from 'better-scroll'\n\n  export default {\n    props: {\n      probeType: {\n        type: Number,\n        default: 1\n      },\n      click: {\n        type: Boolean,\n        default: true\n      },\n      data: {\n        type: Array,\n        default:[]\n      },\n      pullup: {\n        type: Boolean,\n        default: false\n      },\n      beforeScroll: {\n        type: Boolean,\n        default: false\n      },\n      refreshDelay: {\n        type: Number,\n        default: 20\n      }\n    },\n    mounted() {\n      setTimeout(() => {\n        this._initScroll()\n      }, 20)\n    },\n    methods: {\n      _initScroll() {\n        if (!this.$refs.wrapper) {\n          return\n        }\n        this.scroll = new BScroll(this.$refs.wrapper, {\n          probeType: this.probeType,\n          click: this.click\n        })\n\n          this.scroll.on('scroll', (position) => {\n            this.$emit('scroll', position)\n          })\n\n        if (this.pullup) {\n          this.scroll.on('scrollEnd', () => {\n            if (this.scroll.y <= (this.scroll.maxScrollY + 50)) {\n              this.$emit('scrollToEnd')\n            }\n          })\n        }\n\n        if (this.beforeScroll) {\n          this.scroll.on('beforeScrollStart', () => {\n            this.$emit('beforeScroll')\n          })\n        }\n      },\n      disable() {\n        this.scroll && this.scroll.disable()\n      },\n      enable() {\n        this.scroll && this.scroll.enable()\n      },\n      refresh() {\n        this.scroll && this.scroll.refresh()\n      },\n      scrollTo() {\n        this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments)\n      },\n      scrollToElement() {\n        this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n      }\n    },\n    watch: {\n      data() { // 监听data\n        setTimeout(() => {\n          this.refresh()\n        }, 20) // transition 100ms，影响了计算\n      }\n    }\n  }\n</script>\n\n<style scoped >\n.wrapper{\n  position:fixed;\n  top:88px;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  overflow: hidden;\n\n}\n</style>\n"]}]}