{"remainingRequest":"F:\\cjq\\my-music\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\cjq\\my-music\\src\\base\\suggest\\suggest.vue?vue&type=style&index=0&id=2954e294&scoped=true&lang=css&","dependencies":[{"path":"F:\\cjq\\my-music\\src\\base\\suggest\\suggest.vue","mtime":1604843353318},{"path":"F:\\cjq\\my-music\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\cjq\\my-music\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\cjq\\my-music\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\cjq\\my-music\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\cjq\\my-music\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnN1Z2dlc3QtbGlzdHsNCiAgcG9zaXRpb246IGZpeGVkOw0KICB0b3A6MTAwcHg7DQogIGxlZnQ6MjBweDsNCiAgcmlnaHQ6IDIwcHg7DQogIGJvdHRvbTowOw0KICB6LWluZGV4OiAxMDA7DQogIHdpZHRoOjMzNHB4Ow0KICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMDBweCk7DQogIGJhY2tncm91bmQtY29sb3I6ICMyMjI7DQogIG92ZXJmbG93OmhpZGRlbjsNCn0NCi5zdWdnZXN0LWl0ZW17DQogIGRpc3BsYXk6IGZsZXg7DQogIHBhZGRpbmctdG9wOjIwcHg7DQp9DQouaWNvbnsNCiAgZm9udC1zaXplOjE0cHg7DQogIGNvbG9yOmRpbWdyZXk7DQogIHBhZGRpbmctcmlnaHQ6MTBweDsNCn0NCi5uYW1leyAgDQogIGNvbG9yOiM4ZjhmOGY7DQp9DQoNCg=="},{"version":3,"sources":["suggest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"suggest.vue","sourceRoot":"src/base/suggest","sourcesContent":["<template>\r\n  <scroll class=\"suggest-list\" \r\n        :pullup=\"pullup\"\r\n        ref=\"scroll\"\r\n        @scrollToEnd=\"searchMore\">\r\n   <ul >\r\n      <li class=\"suggest-item\" \r\n          :key=\"index\" v-for=\"(item,index) in searchList\"\r\n          @click=\"selectItem(item)\">\r\n          <svg-icon v-show=\"showIcon(item)\"  icon-class=\"singer\" class-name=\"icon\"></svg-icon>  \r\n          <svg-icon v-show=\"!showIcon(item)\" icon-class=\"music\" class-name=\"icon\" ></svg-icon>             \r\n        <div class=\"name\">\r\n          <p class=\"text\" v-html=\"getName(item)\"></p>\r\n        </div>\r\n      </li>\r\n      <loading v-show=\"hasMore\" > </loading>\r\n    </ul>     \r\n</scroll>\r\n</template>\r\n\r\n<script>\r\nimport {searchQuery} from 'api/search'\r\nimport {createSong,processSongsUrl} from 'common/js/song'\r\nimport {ERR_OK} from 'api/config'\r\nimport Scroll from 'base/scroll/scroll'\r\nimport Loading from 'base/loading/loading'\r\nimport {debounce} from 'common/js/util'\r\nimport { mapActions, mapMutations } from 'vuex'\r\nimport Singer from 'common/js/singer'\r\n\r\n\r\nconst SINGER='singer'\r\n\r\nexport default {\r\n  components: {\r\n    Scroll,\r\n    Loading,\r\n  },\r\n  props: {\r\n    perpage:{\r\n        type:Number,\r\n        default:20\r\n    },\r\n    showSinger:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    query:{\r\n        type:String,\r\n        default:''\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n        page:1,\r\n        searchList:[],\r\n        pullup:true,\r\n        countpage:Number\r\n\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {\r\n    hasMore(){     \r\n      return this.page<=this.countpage?true:false\r\n    }\r\n  },\r\n  updated(){\r\n    this.$refs.scroll.refresh()   \r\n  },\r\n  methods: {\r\n      selectItem(item){    \r\n         if(item.type===SINGER){\r\n          const singer = new Singer({\r\n            id: item.singermid,\r\n            name: item.singername\r\n          })\r\n          this.$router.push({path:`/singer/${item.singermid}`})          \r\n          this.SET_SINGER(singer)   \r\n         }else{          \r\n          this.$emit('select',item)\r\n         }this.savesearchHistory(this.query)  \r\n      },\r\n      searchMore(){\r\n        this.page++\r\n        if(!this.hasMore){\r\n          return \r\n        }\r\n         searchQuery(this.query,this.page,this.perpage,this.showSinger).then((res)=>{\r\n           if(res.code===ERR_OK){\r\n             this._genResult(res.data).then((result) => {\r\n              this.searchList.push(...result)   \r\n            })\r\n          }\r\n        })\r\n      },\r\n       showIcon(item){\r\n         if(item.type===SINGER){\r\n           return true\r\n         }else{\r\n           return false\r\n         }\r\n       },\r\n       getName(item){\r\n         if(item.type===SINGER){\r\n           return item.singername\r\n         }else{\r\n         return `${item.name}-${item.singer}`\r\n         }\r\n       },\r\n       _searchQuery(){\r\n        searchQuery(this.query, this.page, this.perpage, this.showSinger).then((res) => {\r\n          if (res.code === ERR_OK) {\r\n            this.countpage=Math.ceil(res.data.song.totalnum/this.perpage)\r\n             this._genResult(res.data).then((result) => {\r\n              this.searchList =result \r\n              console.log(this.searchList)            \r\n            })            \r\n          }\r\n        })    \r\n      },\r\n      _genResult(data) {\r\n        let ret = []\r\n        if (data.zhida && data.zhida.singerid && this.page === 1) {\r\n          ret.push({...data.zhida, ...{type: SINGER}})\r\n        }\r\n        return processSongsUrl(this._normalizeSongs(data.song.list)).then((songs) => {\r\n          ret = ret.concat(songs)\r\n          return ret\r\n        })\r\n      },\r\n      _normalizeSongs(list) {\r\n        let ret = []\r\n        list.forEach((item) => {\r\n            ret.push(createSong(item))\r\n        })\r\n        return ret\r\n      },\r\n      ...mapActions(['savesearchHistory',' insertSong']),\r\n      ...mapMutations(['SET_SINGER'])\r\n  },\r\n  created() {\r\n       this.$watch('query',debounce((newQuery)=>{\r\n          if(newQuery.trim().length===0){\r\n              return \r\n          }\r\n          this._searchQuery()\r\n          },200)                       \r\n        )                  \r\n  },\r\n  mounted() {   \r\n  }\r\n};\r\n</script>\r\n<style scoped >\r\n.suggest-list{\r\n  position: fixed;\r\n  top:100px;\r\n  left:20px;\r\n  right: 20px;\r\n  bottom:0;\r\n  z-index: 100;\r\n  width:334px;\r\n  height: calc(100vh - 100px);\r\n  background-color: #222;\r\n  overflow:hidden;\r\n}\r\n.suggest-item{\r\n  display: flex;\r\n  padding-top:20px;\r\n}\r\n.icon{\r\n  font-size:14px;\r\n  color:dimgrey;\r\n  padding-right:10px;\r\n}\r\n.name{  \r\n  color:#8f8f8f;\r\n}\r\n\r\n</style>\r\n"]}]}